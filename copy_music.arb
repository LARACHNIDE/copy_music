require 'pathname'
require 'rainbow/refinement'
require 'thor'
using Rainbow

MUSIC_FOLDER = Pathname('C:/Users/Utilisateur/Music')
DOWNLOADS_FOLDER = Pathname('C:/Users/Utilisateur/Downloads')
DIVERS_FOLDER = MUSIC_FOLDER.join('AAA Divers')

def main
  @copied_files = 0
  @warnings = 0
  @renames = 0
  @thor = Thor::Shell::Basic.new

  DOWNLOADS_FOLDER.children.each do |file|
    next unless file.to_s.include?('.mp3')

    move_file_to_correct_folder!(file)
  end

  display_stats
  return if @renames.zero?

  warn "\nOnce again for the files renamed".yellow
  main
end

def move_file_to_correct_folder!(file)
  destination_folder = find_destination_folder_for(file)
  return if destination_folder.nil?

  warn "Moved '#{file.basename}' to '#{destination_folder}'".green
  File.rename(file.to_s, destination_folder.join(file.basename).to_s)
  @copied_files += 1
end

def find_destination_folder_for(file)
  artist_name = file.basename.to_s.split(' - ')[0]

  ret = search_in(MUSIC_FOLDER, artist_name)
  return ret unless ret.nil?

  ret = search_in(MUSIC_FOLDER.join('AAA Musique de films'), artist_name)
  return ret unless ret.nil?

  warn "--- Could not find any destination folder for #{file.basename} ---".yellow
  ret = ask_and_create_folder_for(file)
  return ret unless ret.nil?

  @warnings += 1
  nil
end

def search_in(pathname, artist_name)
  pathname.children.each do |folder|
    return folder if folder.to_s.include?(artist_name)
  end
  nil
end

def display_stats
  puts "-------------\nTotal : #{@copied_files} file(s) copied, #{@warnings} warning(s) raised.\n-------------".blue
end

def ask_and_create_folder_for(file)
  artist = file.basename.to_s.split(' - ')[0]
  folder_path = MUSIC_FOLDER.join(artist)
  return switch_to_divers?(file) unless @thor.yes?("Do you want to create the folder #{folder_path} ?".magenta)

  folder_path.mkpath
  folder_path
end

def switch_to_divers?(file)
  new_name = "Divers - #{file.basename}"
  if @thor.yes?("Do you want to change the file name to #{new_name} ?".magenta)
    file.rename(file.dirname.join(new_name).to_s)
    @renames += 1
  end
  nil
end

main
